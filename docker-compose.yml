services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Europe/Kyiv
    volumes:
      - n8n_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


  n8n:
    image: n8nio/n8n:1.108.1
    container_name: n8n
    restart: unless-stopped
    depends_on:
    - postgres
    ports:
      - "127.0.0.1:5678:5678" # Only exposed locally, Traefik handles external access
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}  # Comes from .env file
      - DB_POSTGRESDB_USER=${POSTGRES_USER}     # Comes from .env file
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD} # Comes from .env file
      - NODE_FUNCTION_ALLOW_EXTERNAL=langchain # Important for LangChain nodes!
    volumes:
      - .:/home/node/.n8n # Persist your workflows and settings
    # networks:
    #   - n8n
    #   - traefik
    # labels: # Traefik magic happens here
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.n8n.rule=Host(`n8n.yourdomain.com`)" # <<< REPLACE WITH YOUR DOMAIN!
    #   - "traefik.http.routers.n8n.entrypoints=websecure"
    #   - "traefik.http.routers.n8n.tls.certresolver=myresolver" # <<< REPLACE 'myresolver' with your Traefik resolver name!
    #   - "traefik.http.services.n8n.loadbalancer.server.port=5678"


  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
    - "80:80"
    - "443:443"
    environment:
      DOMAIN: ${DOMAIN}
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - n8n


volumes:
  n8n_postgres:
  n8n:
  caddy_data:
  caddy_config: